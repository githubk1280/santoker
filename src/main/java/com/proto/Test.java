package com.proto;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.List;

/**
 * Created by lefu on 2015/5/25.
 */
public class Test {

    public static void main(String[] args) throws IOException {

        // 按照定义的数据结构，创建一个Person
        PersonOuterClass.Person.Builder personBuilder = PersonOuterClass.Person.newBuilder();
        personBuilder.setId(1);
        personBuilder.setEmail("xxg@163.com");
        personBuilder.addFriends("Friend A");
        personBuilder.addFriends("Friend B");
        PersonOuterClass.Person xxg = personBuilder.build();

        // 将数据写到输出流，如网络输出流，这里就用ByteArrayOutputStream来代替
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        xxg.writeTo(output);

        // -------------- 分割线：上面是发送方，将数据序列化后发送 ---------------

        byte[] byteArray = output.toByteArray();

        // -------------- 分割线：下面是接收方，将数据接收后反序列化 ---------------

        // 接收到流并读取，如网络输入流，这里用ByteArrayInputStream来代替
        ByteArrayInputStream input = new ByteArrayInputStream(byteArray);

        // 反序列化
        PersonOuterClass.Person xxg2 = PersonOuterClass.Person.parseFrom(input);
        System.out.println("ID:" + xxg2.getId());
        System.out.println("email:" + xxg2.getEmail());
        System.out.println("friend:");
        List<String> friends = xxg2.getFriendsList();
        for (String friend : friends) {
            System.out.println(friend);
        }

    }
}
